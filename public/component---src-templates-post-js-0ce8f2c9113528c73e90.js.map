{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["BlogPostTemplate","content","categories","tags","title","date","author","className","dangerouslySetInnerHTML","__html","style","marginTop","to","slug","name","length","map","category","key","tag","BlogPost","post","data","wordpressPost","pageQuery"],"mappings":"+QAMaA,EAAmB,SAAC,GAO1B,IANLC,EAMI,EANJA,QACAC,EAKI,EALJA,WACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,KACAC,EACI,EADJA,OAEA,OACE,6BAASC,UAAU,WACjB,yBAAKA,UAAU,qBACb,yBAAKA,UAAU,WACb,yBAAKA,UAAU,4BACb,wBAAIA,UAAU,sDACXH,GAEH,yBAAKI,wBAAyB,CAAEC,OAAQR,KACxC,yBAAKS,MAAO,CAAEC,UAAU,SACtB,2BACGN,EADH,eACqB,IACnB,kBAAC,IAAD,CAAMO,GAAE,WAAaN,EAAOO,MAASP,EAAOQ,OAE7CZ,GAAcA,EAAWa,OACxB,6BACE,0CACA,wBAAIR,UAAU,WACXL,EAAWc,KAAI,SAAAC,GAAQ,OACtB,wBAAIC,IAAQD,EAASJ,KAAd,OACL,kBAAC,IAAD,CAAMD,GAAE,eAAiBK,EAASJ,KAA1B,KACLI,EAASH,YAMlB,KACHX,GAAQA,EAAKY,OACZ,6BACE,oCACA,wBAAIR,UAAU,WACXJ,EAAKa,KAAI,SAAAG,GAAG,OACX,wBAAID,IAAQC,EAAIN,KAAT,OACL,kBAAC,IAAD,CAAMD,GAAE,SAAWO,EAAIN,KAAf,KAAyBM,EAAIL,YAK3C,WAsCHM,UAxBE,SAAC,GAAc,IACPC,EADM,EAAXC,KACVC,cAER,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAQnB,MAAUiB,EAAKjB,MAAV,YACb,kBAACJ,EAAD,CACEC,QAASoB,EAAKpB,QACdC,WAAYmB,EAAKnB,WACjBC,KAAMkB,EAAKlB,KACXC,MAAOiB,EAAKjB,MACZC,KAAMgB,EAAKhB,KACXC,OAAQe,EAAKf,WAcd,IAAMkB,EAAS","file":"component---src-templates-post-js-0ce8f2c9113528c73e90.js","sourcesContent":["import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { graphql, Link } from 'gatsby'\nimport Layout from '../components/Layout'\n\nexport const BlogPostTemplate = ({\n  content,\n  categories,\n  tags,\n  title,\n  date,\n  author,\n}) => {\n  return (\n    <section className=\"section\">\n      <div className=\"container content\">\n        <div className=\"columns\">\n          <div className=\"column is-10 is-offset-1\">\n            <h1 className=\"title is-size-2 has-text-weight-bold is-bold-light\">\n              {title}\n            </h1>\n            <div dangerouslySetInnerHTML={{ __html: content }} />\n            <div style={{ marginTop: `4rem` }}>\n              <p>\n                {date} - posted by{' '}\n                <Link to={`/author/${author.slug}`}>{author.name}</Link>\n              </p>\n              {categories && categories.length ? (\n                <div>\n                  <h4>Categories</h4>\n                  <ul className=\"taglist\">\n                    {categories.map(category => (\n                      <li key={`${category.slug}cat`}>\n                        <Link to={`/categories/${category.slug}/`}>\n                          {category.name}\n                        </Link>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ) : null}\n              {tags && tags.length ? (\n                <div>\n                  <h4>Tags</h4>\n                  <ul className=\"taglist\">\n                    {tags.map(tag => (\n                      <li key={`${tag.slug}tag`}>\n                        <Link to={`/tags/${tag.slug}/`}>{tag.name}</Link>\n                      </li>\n                    ))}\n                  </ul>\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nBlogPostTemplate.propTypes = {\n  content: PropTypes.node.isRequired,\n  title: PropTypes.string,\n}\n\nconst BlogPost = ({ data }) => {\n  const { wordpressPost: post } = data\n\n  return (\n    <Layout>\n      <Helmet title={`${post.title} | Blog`} />\n      <BlogPostTemplate\n        content={post.content}\n        categories={post.categories}\n        tags={post.tags}\n        title={post.title}\n        date={post.date}\n        author={post.author}\n      />\n    </Layout>\n  )\n}\n\nBlogPost.propTypes = {\n  data: PropTypes.shape({\n    markdownRemark: PropTypes.object,\n  }),\n}\n\nexport default BlogPost\n\nexport const pageQuery = graphql`\n  fragment PostFields on wordpress__POST {\n    id\n    slug\n    content\n    date(formatString: \"MMMM DD, YYYY\")\n    title\n  }\n  query BlogPostByID($id: String!) {\n    wordpressPost(id: { eq: $id }) {\n      id\n      title\n      slug\n      content\n      date(formatString: \"MMMM DD, YYYY\")\n      categories {\n        name\n        slug\n      }\n      tags {\n        name\n        slug\n      }\n      author {\n        name\n        slug\n      }\n    }\n  }\n`\n"],"sourceRoot":""}